#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path("../lib", __dir__)

require 'mercenary'
require 'jtoc'

Mercenary.program(:jtoc) do |p|
  p.version JTOpenCourse::VERSION
  p.description "A generator for the Open Course Jekyll theme"
  p.syntax "jtoc <subcommand> [options]"

  p.command(:version) do |c|
    c.description "Ouput the version number"
    c.syntax "version"
    c.action do |_,_|
      puts JTOpenCourse::VERSION
    end
  end

  p.command(:setup) do |c|
    c.syntax "setup"
    c.description <<~DESC
      Interactively set up a new course site.
    DESC
    c.action do |_,_|
      puts "Enter the short identifier for this course:"
      while true
        path = gets.chomp
        if JTOpenCourse::SiteBuilder.path_check(path)
          puts "A course with that identifier already exists. Try another:"
        else
          break
        end
      end
    end
  end

  p.command(:new) do |c|
    c.syntax "new PATH [options]"
    c.description <<~DESC
      Create a new course site at PATH. By design, the PATH value is used for the
      directory value as well as the GitHub repo name, and the base URL for the
      course site (e.g., https://example.com/PATH/)
    DESC
    c.option 'monday', '-m DATE', '--monday DATE', 'Set the first Monday of the term (e.g., 2020-01-13)'
    c.option 'weeks', '-w NUM', '--weeks NUM', 'Set the number of weeks in the term'
    c.option 'projects', '-p NUM', '--projects NUM', 'Set the number of major projects in the course'
    c.option 'days', '-d DAYS', '--days DAYS', 'Set the course meeting days (e.g., "Monday, Wednesday")'
    c.option 'url', '-u URL', '--url URL', 'Set the course URL (e.g., https://example.com).'
    c.option 'number', '-n COURSE', '--number COURSE', 'Set the course number (e.g., "COM 101")'
    c.option 'title', '-t TITLE', '--title TITLE', 'Set the course title (e.g., "Intro to Communication")'
    c.option 'instructor', '-i NAME', '--instructor NAME', 'Set the instructor name (e.g., "Marcus Cicero")'
    c.option 'cc', '-c', '--creative-commons', 'Add a Creative Commons license'
    c.action do |args, options|
      course = JTOpenCourse::SiteBuilder.new(args, options)
      if course.path.exist?
        puts "A directory named '#{course.name}' already exists. Aborting."
        abort
      end
      course.create!
    end
  end

  p.action do |args, _|
    if args.empty?
      puts p
    else
      subcommand = args.first
      unless p.has_command? subcommand
        puts "Sorry, I don't know how to '#{args.first}'."
        puts "Try running `jtgen --help` for help."
      end
    end
  end
end
